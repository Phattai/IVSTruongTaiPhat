@model DTO.Product.Measure.MeasureDTO
@{
    ViewBag.Title = "Update";
}

<h2>
    <span class="alert-warning">Update Measure</span>
</h2>

@if (!string.IsNullOrEmpty((string)TempData["Error"]))
{
    <div id="error" class="error">
        @TempData["Error"]
    </div>
}

@using (Html.BeginForm("UpdateMeasure", "Measure", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <div class="row">
        <div class="col-md-4">
            <div class="row">
                Measure Code:
            </div>
            <div class="row">
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.code, new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessageFor(m => m.code)
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="row">
                Measure Name:
            </div>
            <div class="row">
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.name, new { @class = "form-control", @placeholder = "Measure Name" })
                    @Html.ValidationMessageFor(m => m.name)
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="row">
                Decription:
            </div>
            <div class="row">
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.description, new { @class = "form-control", @placeholder = "Decription" })
                    @Html.ValidationMessageFor(m => m.description)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div>@Html.HiddenFor(m => m.id)</div>
        <div class="col-md-11 text-center">
            <button type="submit" class="btn btn-success">Update Measure</button>
        </div>
    </div>
}